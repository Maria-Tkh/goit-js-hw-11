{"version":3,"sources":["js/task-3.js"],"names":["randomIntegerFromInterval","min","max","Math","floor","random","makeTransaction","transaction","Promise","resolve","reject","delay","setTimeout","id","logSuccess","console","log","logError","warn","amount","then","catch"],"mappings":";AAAA,MAAMA,EAA4B,CAACC,EAAKC,IAC/BC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,GAGhDK,EAAmBC,GACd,IAAIC,QAAQ,CAACC,EAASC,KACnBC,MAAAA,EAAQX,EAA0B,IAAK,KAE7CY,WAAW,KACYT,KAAKE,SAAW,GAG/BI,EAAQ,CAAEI,GAAIN,EAAYM,GAAIF,MAAAA,IAE9BD,EAAOH,EAAYM,KAExBF,KAKLG,EAAa,EAAGD,GAAAA,EAAIF,MAAAA,MACxBI,QAAQC,mBAAmBH,kBAAmBF,QAG1CM,EAAWJ,IACfE,QAAQG,qCAAqCL,+BAU/CP,EAAgB,CAAEO,GAAI,GAAIM,OAAQ,MAAOC,KAAKN,GAAYO,MAAMJ,GAChEX,EAAgB,CAAEO,GAAI,GAAIM,OAAQ,MAAOC,KAAKN,GAAYO,MAAMJ,GAChEX,EAAgB,CAAEO,GAAI,GAAIM,OAAQ,KAAMC,KAAKN,GAAYO,MAAMJ,GAC/DX,EAAgB,CAAEO,GAAI,GAAIM,OAAQ,MAAOC,KAAKN,GAAYO,MAAMJ","file":"task-3.e0dea582.js","sourceRoot":"../src","sourcesContent":["const randomIntegerFromInterval = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nconst makeTransaction = (transaction) => {\n    return new Promise((resolve, reject) => {\n        const delay = randomIntegerFromInterval(200, 500);\n\n        setTimeout(() => {\n            const canProcess = Math.random() > 0.3;\n\n            if (canProcess) {\n                resolve({ id: transaction.id, delay });\n            } else {\n                reject(transaction.id);\n            }\n        }, delay);\n    });\n      \n};\n\nconst logSuccess = ({ id, delay }) => {\n  console.log(`Transaction ${id} processed in ${delay}ms`);\n};\n\nconst logError = id => {\n  console.warn(`Error processing transaction ${id}. Please try again later.`);\n};\n\n// Currently the function works like this\n// makeTransaction({ id: 70, amount: 150 }, logSuccess, logError);\n// makeTransaction({ id: 71, amount: 230 }, logSuccess, logError);\n// makeTransaction({ id: 72, amount: 75 }, logSuccess, logError);\n// makeTransaction({ id: 73, amount: 100 }, logSuccess, logError);\n\n// The function should work like this\nmakeTransaction({ id: 70, amount: 150 }).then(logSuccess).catch(logError);\nmakeTransaction({ id: 71, amount: 230 }).then(logSuccess).catch(logError);\nmakeTransaction({ id: 72, amount: 75 }).then(logSuccess).catch(logError);\nmakeTransaction({ id: 73, amount: 100 }).then(logSuccess).catch(logError);"]}